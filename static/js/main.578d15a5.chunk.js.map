{"version":3,"sources":["assets/bravo.gif","assets sync /^/.//.*/.png$","assets/apple.png","assets/avocado.png","assets/banana.png","assets/corn.png","assets/lemon.png","assets/lettuce.png","assets/onion.png","assets/strawberry.png","assets/index.ts","components/Card/index.tsx","components/GameBoard/index.tsx","components/ResetButton/index.tsx","components/WinModal/index.tsx","App.tsx","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","initializeDeck","array","_array","slice","i","length","randomIndex","Math","floor","random","temp","shuffle","reduce","acc","value","push","Card","width","height","flipped","solved","disabled","handleClick","children","className","style","onClick","opacity","src","require","alt","GameBoard","cards","card","key","includes","ResetButton","props","WinModal","click","time","setModal","finalTime","toFixed","bravo","App","useState","setTime","clicks","setClicks","activeChrono","setActiveChrono","setCards","setFlipped","setSolved","setDisabled","winModal","setWinModal","useEffect","interval","setInterval","clearInterval","sameCardClicked","isMatch","clickedCard","find","flippedCard","resetCards","alignItems","marginLeft","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.578d15a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bravo.ac3dceec.gif\";","var map = {\n\t\"./apple.png\": 12,\n\t\"./avocado.png\": 13,\n\t\"./banana.png\": 14,\n\t\"./corn.png\": 15,\n\t\"./lemon.png\": 16,\n\t\"./lettuce.png\": 17,\n\t\"./onion.png\": 18,\n\t\"./strawberry.png\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 11;","module.exports = __webpack_public_path__ + \"static/media/apple.0a2a3411.png\";","module.exports = __webpack_public_path__ + \"static/media/avocado.56e8eabd.png\";","module.exports = __webpack_public_path__ + \"static/media/banana.944da2e9.png\";","module.exports = __webpack_public_path__ + \"static/media/corn.411d4325.png\";","module.exports = __webpack_public_path__ + \"static/media/lemon.2c7096b5.png\";","module.exports = __webpack_public_path__ + \"static/media/lettuce.ba36bf41.png\";","module.exports = __webpack_public_path__ + \"static/media/onion.78415daa.png\";","module.exports = __webpack_public_path__ + \"static/media/strawberry.10c41a10.png\";","function shuffle(array: object[]) {\n  const _array = array.slice(0);\n  for (let i = 0; i < array.length - 1; i++) {\n    let randomIndex = Math.floor(Math.random() * (i + 1));\n    let temp = _array[i];\n    _array[i] = _array[randomIndex];\n    _array[randomIndex] = temp;\n  }\n  return _array;\n}\n\nexport default function initializeDeck() {\n  let id = 0;\n  const cards = [\n    'apple',\n    'avocado',\n    'banana',\n    'corn',\n    'lemon',\n    'lettuce',\n    'onion',\n    'strawberry'\n  ].reduce((acc: object[], value: string) => {\n    acc.push({ id: id++, value });\n    acc.push({ id: id++, value });\n    return acc;\n  }, []);\n\n  return shuffle(cards);\n}\n","import React, { FunctionComponent } from 'react';\n\ninterface CardsProps {\n  id: number;\n  value: string;\n  width: number;\n  height: number;\n  flipped: () => void;\n  solved: boolean;\n  disabled: boolean;\n  handleClick: (id: number) => void;\n}\n\nconst Card: FunctionComponent<CardsProps> = ({\n  id,\n  value,\n  width,\n  height,\n  flipped,\n  solved,\n  disabled,\n  handleClick,\n  children\n}) => {\n  return (\n    <div\n      className=\"card\"\n      style={{ width, height }}\n      onClick={() => (disabled ? null : handleClick(id))}\n    >\n      <img\n        style={{ width, height, opacity: flipped || solved ? 1 : 0 }}\n        src={flipped || solved ? require(`../../assets/${value}.png`) : null}\n        alt=\"\"\n      />\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { FunctionComponent } from 'react';\n\nimport Card from '../Card';\n\ninterface GameBoardProps {\n  cards: { id: number; value: string; width: number; height: number }[];\n  flipped: any;\n  solved: any;\n  disabled: boolean;\n  handleClick: (id: number) => void;\n}\n\nconst GameBoard: FunctionComponent<GameBoardProps> = ({\n  cards,\n  flipped,\n  solved,\n  disabled,\n  handleClick\n}) => {\n  return (\n    <div className=\"board-section\">\n      {cards.map(card => (\n        <Card\n          key={card.id}\n          id={card.id}\n          value={card.value}\n          width={100}\n          height={100}\n          flipped={flipped.includes(card.id)}\n          solved={solved.includes(card.id)}\n          handleClick={handleClick}\n          disabled={disabled || solved.includes(card.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default GameBoard;\n","import React, { FunctionComponent } from 'react';\n\ninterface ButtonProps {\n  onClick: () => void;\n}\n\nconst ResetButton: FunctionComponent<ButtonProps> = (props) => {\n  return (\n    <button onClick={props.onClick} className=\"button\">\n      {props.children}\n    </button>\n  );\n};\n\nexport default ResetButton;\n","import React, { FunctionComponent, Dispatch, SetStateAction } from 'react';\n\nimport bravo from '../../assets/bravo.gif';\n\ninterface WinModalProps {\n  click: number;\n  time: number;\n  setModal: Dispatch<SetStateAction<boolean>>;\n}\n\nconst WinModal: FunctionComponent<WinModalProps> = ({\n  click,\n  time,\n  setModal\n}) => {\n  const finalTime = `${\n    time / 60 < 10 ? `0${(time / 60).toFixed(0)}` : (time / 60).toFixed(0)\n  }:${time % 60 < 10 ? `0${(time % 60).toFixed(0)}` : (time % 60).toFixed(0)}`;\n\n  return (\n    <div id=\"overlay\" className=\"modal-overlay\" onClick={() => setModal(false)}>\n      <div className=\"modal-content\">\n        <h4>You did it!</h4>\n        <img src={bravo} alt=\"bravo\" />\n        <p>\n          {click / 2} clicks - {finalTime}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default WinModal;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\n\nimport initializeDeck from './assets';\n\nimport GameBoard from './components/GameBoard';\nimport ResetButton from './components/ResetButton';\nimport WinModal from './components/WinModal';\n\nconst App: FunctionComponent = () => {\n  const [time, setTime] = useState(0);\n  const [clicks, setClicks] = useState(0);\n  const [activeChrono, setActiveChrono] = useState(false);\n\n  const [cards, setCards] = useState([] as any);\n  const [flipped, setFlipped] = useState([] as any);\n  const [solved, setSolved] = useState([] as any);\n  const [disabled, setDisabled] = useState(false);\n\n  const [winModal, setWinModal] = useState(false);\n\n  useEffect(() => {\n    setCards(initializeDeck());\n  }, []);\n\n  useEffect(() => {\n    if (clicks >= 1) setActiveChrono(true);\n  }, [clicks]);\n\n  useEffect(() => {\n    if (!activeChrono) return;\n    const interval = setInterval(() => {\n      setTime(time + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [activeChrono, time]);\n\n  useEffect(() => {\n    if (cards && solved.length === 16) {\n      setActiveChrono(false);\n      setWinModal(true);\n    }\n  }, [cards, solved]);\n\n  const handleClick = (id: number) => {\n    setDisabled(true);\n    if (flipped.length === 0) {\n      setFlipped([id]);\n      setDisabled(false);\n    } else {\n      if (sameCardClicked(id)) return;\n      setFlipped([flipped[0], id]);\n      if (isMatch(id)) {\n        setSolved([...solved, flipped[0], id]);\n        resetCards();\n      } else {\n        setTimeout(resetCards, 1000);\n      }\n    }\n    setClicks(clicks + 1);\n  };\n\n  const sameCardClicked = (id: number) => flipped.includes(id);\n\n  const isMatch = (id: number) => {\n    const clickedCard = cards.find((card: { id: number }) => card.id === id);\n    const flippedCard = cards.find(\n      (card: { id: number }) => flipped[0] === card.id\n    );\n    return clickedCard.value === flippedCard.value;\n  };\n\n  const resetCards = () => {\n    setFlipped([]);\n    setDisabled(false);\n  };\n\n  const resetGame = () => {\n    setTime(0);\n    setClicks(0);\n    setActiveChrono(false);\n    setSolved([]);\n  };\n\n  return (\n    <main className=\"main\">\n      <div className=\"board\">\n        <header className=\"board-header\">\n          <div style={{ alignItems: 'flex-start' }}>\n            <h5 className=\"board-title\">Time</h5>\n            <p className=\"board-stats\">\n              {time / 60 < 10\n                ? `0${(time / 60).toFixed(0)}`\n                : (time / 60).toFixed(0)}\n              :\n              {time % 60 < 10\n                ? `0${(time % 60).toFixed(0)}`\n                : (time % 60).toFixed(0)}\n            </p>\n          </div>\n          <div style={{ alignItems: 'flex-start' }}>\n            <h5 className=\"board-title\">Clicks</h5>\n            <p className=\"board-stats\" style={{ marginLeft: '39px' }}>\n              {(clicks / 2).toFixed(0)}\n            </p>\n          </div>\n        </header>\n\n        <GameBoard\n          cards={cards}\n          flipped={flipped}\n          disabled={disabled}\n          solved={solved}\n          handleClick={handleClick}\n        />\n\n        <footer className=\"board-footer\">\n          <ResetButton onClick={resetGame}>RESTART</ResetButton>\n        </footer>\n      </div>\n      {winModal && (\n        <WinModal click={clicks} time={time} setModal={setWinModal} />\n      )}\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './App.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}