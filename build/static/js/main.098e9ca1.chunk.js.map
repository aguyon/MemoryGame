{"version":3,"sources":["assets sync /^/.//.*/.png$","assets/apple.png","assets/avocado.png","assets/banana.png","assets/corn.png","assets/lemon.png","assets/lettuce.png","assets/onion.png","assets/strawberry.png","assets/index.ts","components/Card/index.tsx","components/GameBoard/index.tsx","components/ResetButton/index.tsx","assets/bravo.gif","components/WinModal/index.tsx","App.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","initializeDeck","array","_array","slice","i","length","randomIndex","Math","floor","random","temp","shuffle","reduce","acc","value","push","Card","props","className","style","width","height","opacity","solved","undefined","onClick","disabled","handleClick","flipped","src","require","default","alt","children","GameBoard","cards","card","includes","ResetButton","WinModal","finalTime","time","toFixed","setModal","bravo","click","App","useState","clicks","setClicks","setTime","activeChrono","setActiveChrono","setCards","setFlipped","setSolved","setDisabled","winModal","setWinModal","useEffect","interval","setInterval","clearInterval","sameCardClicked","isMatch","clickedCard","find","flippedCard","resetCards","alignItems","marginLeft","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.098e9ca1.chunk.js","sourcesContent":["var map = {\n\t\"./apple.png\": 14,\n\t\"./avocado.png\": 15,\n\t\"./banana.png\": 16,\n\t\"./corn.png\": 17,\n\t\"./lemon.png\": 18,\n\t\"./lettuce.png\": 19,\n\t\"./onion.png\": 20,\n\t\"./strawberry.png\": 21\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;","export default __webpack_public_path__ + \"static/media/apple.861f15cd.png\";","export default __webpack_public_path__ + \"static/media/avocado.b130a89f.png\";","export default __webpack_public_path__ + \"static/media/banana.3bb1f17b.png\";","export default __webpack_public_path__ + \"static/media/corn.3eb35ec8.png\";","export default __webpack_public_path__ + \"static/media/lemon.aa17dcd4.png\";","export default __webpack_public_path__ + \"static/media/lettuce.bedc121e.png\";","export default __webpack_public_path__ + \"static/media/onion.50270324.png\";","export default __webpack_public_path__ + \"static/media/strawberry.f8de8e2a.png\";","function shuffle(array: object[]) {\n  const _array: object[] = array.slice(0);\n\n  for (let i: number = 0; i < array.length - 1; i++) {\n    let randomIndex: number = Math.floor(Math.random() * (i + 1));\n    let temp: object = _array[i];\n    _array[i] = _array[randomIndex];\n    _array[randomIndex] = temp;\n  }\n\n  return _array;\n}\n\nexport default function initializeDeck() {\n  let id: number = 0;\n  let cardsName: string[] = ['apple', 'avocado', 'banana', 'corn', 'lemon', 'lettuce', 'onion', 'strawberry'];\n\n  const cards: object[] = cardsName.reduce((acc: object[], value: string) => {\n    acc.push({ id: id++, value });\n    acc.push({ id: id++, value });\n    return acc;\n  }, []);\n\n  return shuffle(cards);\n}\n","import React, { FC } from 'react';\n\ninterface CardsProps {\n  id: number;\n  value: string;\n  width: number;\n  height: number;\n  flipped: boolean;\n  solved: boolean;\n  disabled: boolean;\n  handleClick: (id: number) => void;\n}\n\nconst Card: FC<CardsProps> = (props) => {\n  return (\n    <div\n      className=\"card\"\n      style={{ width: props.width, height: props.height, opacity: props.solved ? 0.7 : undefined }}\n      onClick={() => (props.disabled ? null : props.handleClick(props.id))}\n    >\n      <img\n        style={{ width: props.width, height: props.height, opacity: props.flipped || props.solved ? 1 : 0 }}\n        src={props.flipped || props.solved ? require(`../../assets/${props.value}.png`).default : null}\n        alt=\"card\"\n      />\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { FC } from 'react';\n\nimport Card from '../Card';\n\ninterface GameBoardProps {\n  cards: { id: number; value: string; width: number; height: number }[];\n  flipped: any;\n  solved: any;\n  disabled: boolean;\n  handleClick: (id: number) => void;\n}\n\nconst GameBoard: FC<GameBoardProps> = (props: GameBoardProps) => {\n  return (\n    <div className=\"board-section\">\n      {props.cards.map((card) => (\n        <Card\n          key={card.id}\n          id={card.id}\n          value={card.value}\n          width={100}\n          height={100}\n          flipped={props.flipped.includes(card.id)}\n          solved={props.solved.includes(card.id)}\n          handleClick={props.handleClick}\n          disabled={props.disabled || props.solved.includes(card.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default GameBoard;\n","import React, { FC } from 'react';\n\ninterface ButtonProps {\n  onClick: () => void;\n}\n\nconst ResetButton: FC<ButtonProps> = (props) => {\n  return (\n    <button onClick={props.onClick} className=\"button\">\n      {props.children}\n    </button>\n  );\n};\n\nexport default ResetButton;\n","export default __webpack_public_path__ + \"static/media/bravo.48ab6ee5.gif\";","import React, { FC, Dispatch, SetStateAction } from 'react';\n\nimport bravo from '../../assets/bravo.gif';\n\ninterface WinModalProps {\n  click: number;\n  time: number;\n  setModal: Dispatch<SetStateAction<boolean>>;\n}\n\nconst WinModal: FC<WinModalProps> = (props: WinModalProps) => {\n  const finalTime = `${props.time / 60 < 10 ? `0${(props.time / 60).toFixed(0)}` : (props.time / 60).toFixed(0)}:${\n    props.time % 60 < 10 ? `0${(props.time % 60).toFixed(0)}` : (props.time % 60).toFixed(0)\n  }`;\n\n  return (\n    <div id=\"overlay\" className=\"modal-overlay\" onClick={() => props.setModal(false)}>\n      <div className=\"modal-content\">\n        <h4>You did it!</h4>\n        <img src={bravo} alt=\"well done game is over\" />\n        <p>\n          {props.click / 2} clicks - {finalTime}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default WinModal;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\n\nimport initializeDeck from './assets';\n\nimport GameBoard from './components/GameBoard';\nimport ResetButton from './components/ResetButton';\nimport WinModal from './components/WinModal';\n\nconst App: FunctionComponent = () => {\n  const [clicks, setClicks] = useState(0);\n  const [time, setTime] = useState(0);\n  const [activeChrono, setActiveChrono] = useState(false);\n\n  const [cards, setCards] = useState([] as any);\n  const [flipped, setFlipped] = useState([] as any);\n  const [solved, setSolved] = useState([] as any);\n  const [disabled, setDisabled] = useState(false);\n\n  const [winModal, setWinModal] = useState(false);\n\n  // Initialisation des cartes du jeu\n  useEffect(() => {\n    setCards(initializeDeck());\n  }, []);\n\n  // Lancement du chronomètre quand une carte est cliquée\n  useEffect(() => {\n    if (clicks >= 1) setActiveChrono(true);\n  }, [clicks]);\n\n  useEffect(() => {\n    if (!activeChrono) return;\n    const interval = setInterval(() => {\n      setTime(time + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [activeChrono, time]);\n\n  // Fin du jeu quand toutes les cartes sont retournés\n  useEffect(() => {\n    if (cards && solved.length === 16) {\n      setActiveChrono(false);\n      setWinModal(true);\n    }\n  }, [cards, solved]);\n\n  const handleClick = (id: number): void => {\n    setDisabled(true);\n    if (flipped.length === 0) {\n      setFlipped([id]);\n      setDisabled(false);\n    } else {\n      if (sameCardClicked(id)) return;\n      setFlipped([flipped[0], id]);\n      if (isMatch(id)) {\n        setSolved([...solved, flipped[0], id]);\n        resetCards();\n      } else {\n        setTimeout(resetCards, 1000);\n      }\n    }\n    setClicks(clicks + 1);\n  };\n\n  const sameCardClicked = (id: number): boolean => flipped.includes(id);\n\n  const isMatch = (id: number): boolean => {\n    const clickedCard = cards.find((card: { id: number }) => card.id === id);\n    const flippedCard = cards.find((card: { id: number }) => flipped[0] === card.id);\n    return clickedCard.value === flippedCard.value;\n  };\n\n  const resetCards = (): void => {\n    setFlipped([]);\n    setDisabled(false);\n  };\n\n  const resetGame = (): void => {\n    setTime(0);\n    setClicks(0);\n    setActiveChrono(false);\n    setFlipped([]);\n    setSolved([]);\n  };\n\n  return (\n    <main className=\"main\">\n      <div className=\"board\">\n        <header className=\"board-header\">\n          <div style={{ alignItems: 'flex-start' }}>\n            <h3 className=\"board-title\">Time</h3>\n            <p className=\"board-stats\">\n              {time / 60 < 10 ? `0${(time / 60).toFixed(0)}` : (time / 60).toFixed(0)}:\n              {time % 60 < 10 ? `0${(time % 60).toFixed(0)}` : (time % 60).toFixed(0)}\n            </p>\n          </div>\n          <div style={{ alignItems: 'flex-start' }}>\n            <h3 className=\"board-title align-right\">Clicks</h3>\n            <p className=\"board-stats\" style={{ marginLeft: '39px' }}>\n              {(clicks / 2).toFixed(0)}\n            </p>\n          </div>\n        </header>\n\n        <GameBoard cards={cards} flipped={flipped} disabled={disabled} solved={solved} handleClick={handleClick} />\n\n        <footer className=\"board-footer\">\n          <ResetButton onClick={resetGame}>Reset</ResetButton>\n        </footer>\n      </div>\n      {winModal && <WinModal click={clicks} time={time} setModal={setWinModal} />}\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './App.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}